// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PamelloV7.DAL;

#nullable disable

namespace PamelloV7.DAL.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250513074629_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("DatabasePlaylistDatabaseSong", b =>
                {
                    b.Property<int>("PlaylistsId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PlaylistId");

                    b.Property<int>("SongsId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SongId");

                    b.HasKey("PlaylistsId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("PlaylistsSongs", (string)null);
                });

            modelBuilder.Entity("DatabasePlaylistDatabaseUser", b =>
                {
                    b.Property<int>("FavoriteById")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UserId");

                    b.Property<int>("FavoritePlaylistsId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PlaylistId");

                    b.HasKey("FavoriteById", "FavoritePlaylistsId");

                    b.HasIndex("FavoritePlaylistsId");

                    b.ToTable("UsersFavoritePlaylists", (string)null);
                });

            modelBuilder.Entity("DatabaseSongDatabaseUser", b =>
                {
                    b.Property<int>("FavoriteById")
                        .HasColumnType("INTEGER")
                        .HasColumnName("UserId");

                    b.Property<int>("FavoriteSongsId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SongId");

                    b.HasKey("FavoriteById", "FavoriteSongsId");

                    b.HasIndex("FavoriteSongsId");

                    b.ToTable("UsersFavoriteSongs", (string)null);
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseAssociation", b =>
                {
                    b.Property<string>("Association")
                        .HasColumnType("TEXT");

                    b.Property<int>("SongId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Association");

                    b.HasIndex("SongId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseEpisode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Skip")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SongId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Start")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabasePlaylist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsProtected")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AddedById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("YoutubeId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("SongsPlayed")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DatabasePlaylistDatabaseSong", b =>
                {
                    b.HasOne("PamelloV7.DAL.Entity.DatabasePlaylist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PamelloV7.DAL.Entity.DatabaseSong", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabasePlaylistDatabaseUser", b =>
                {
                    b.HasOne("PamelloV7.DAL.Entity.DatabaseUser", null)
                        .WithMany()
                        .HasForeignKey("FavoriteById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PamelloV7.DAL.Entity.DatabasePlaylist", null)
                        .WithMany()
                        .HasForeignKey("FavoritePlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DatabaseSongDatabaseUser", b =>
                {
                    b.HasOne("PamelloV7.DAL.Entity.DatabaseUser", null)
                        .WithMany()
                        .HasForeignKey("FavoriteById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PamelloV7.DAL.Entity.DatabaseSong", null)
                        .WithMany()
                        .HasForeignKey("FavoriteSongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseAssociation", b =>
                {
                    b.HasOne("PamelloV7.DAL.Entity.DatabaseSong", "Song")
                        .WithMany("Associations")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Song");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseEpisode", b =>
                {
                    b.HasOne("PamelloV7.DAL.Entity.DatabaseSong", "Song")
                        .WithMany("Episodes")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Song");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabasePlaylist", b =>
                {
                    b.HasOne("PamelloV7.DAL.Entity.DatabaseUser", "Owner")
                        .WithMany("OwnedPlaylists")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseSong", b =>
                {
                    b.HasOne("PamelloV7.DAL.Entity.DatabaseUser", "AddedBy")
                        .WithMany("AddedSongs")
                        .HasForeignKey("AddedById");

                    b.Navigation("AddedBy");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseSong", b =>
                {
                    b.Navigation("Associations");

                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("PamelloV7.DAL.Entity.DatabaseUser", b =>
                {
                    b.Navigation("AddedSongs");

                    b.Navigation("OwnedPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
